'use strict';
var MyController = (function () {
    function MyController(foo) {
        console.log(foo.doSomething());
    }
    return MyController;
}());
var m = angular.module('myApp', ['ngRoute', 'ngResource', 'testModule', 'components']);
m.controller('MyController', ['Foo', MyController]);
describe('my test', function () {
    it('something', function () {
        expect(true).toBe(false);
    });
});
var BarService = (function () {
    function BarService(foo) {
    }
    BarService.prototype.doSomethingWithFoo = function () {
    };
    return BarService;
}());
angular
    .module('testModule', [])
    .service('Bar', ['Foo', BarService]);
var FooService = (function () {
    function FooService($resource, $q) {
        this.$resource = $resource;
    }
    FooService.prototype.doSomething = function () {
        return "inside foo";
    };
    return FooService;
}());
angular
    .module('testModule', [])
    .service('Foo', ['$resource', '$q', FooService]);
var HelloWorldController = (function () {
    function HelloWorldController($scope) {
        this.name = 'World!';
        $scope.name = this.name;
    }
    return HelloWorldController;
}());
angular.
    module('components', []).
    component('helloWorld', {
    template: "<h1>Hello, {{name}}</h1>",
    controller: HelloWorldController
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidHMvYXBwLnRzIiwidHMvYmFyLnNlcnZpY2Uuc3BlYy50cyIsInRzL2Jhci5zZXJ2aWNlLnRzIiwidHMvZm9vLnNlcnZpY2UudHMiLCJ0cy9oZWxsb3dvcmxkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7QUFFYjtJQUNFLHNCQUFZLEdBQWU7UUFDekIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBQ0gsbUJBQUM7QUFBRCxDQUFDLEFBSkQsSUFJQztBQUVELElBQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFLENBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxZQUFZLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQztBQUV2RixDQUFDLENBQUMsVUFBVSxDQUFDLGNBQWMsRUFBRSxDQUFDLEtBQUssRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDO0FDVnBELFFBQVEsQ0FBQyxTQUFTLEVBQUU7SUFDbEIsRUFBRSxDQUFDLFdBQVcsRUFBRTtRQUNkLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0IsQ0FBQyxDQUFDLENBQUE7QUFDSixDQUFDLENBQUMsQ0FBQztBQ0pIO0lBQ0Usb0JBQVksR0FBZTtJQUUzQixDQUFDO0lBRU0sdUNBQWtCLEdBQXpCO0lBRUEsQ0FBQztJQUNILGlCQUFDO0FBQUQsQ0FBQyxBQVJELElBUUM7QUFFRCxPQUFPO0tBQ0osTUFBTSxDQUFDLFlBQVksRUFBRSxFQUFFLENBQUM7S0FDeEIsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDLEtBQUssRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDO0FDVnZDO0lBQ0Usb0JBQW9CLFNBQXVDLEVBQUUsRUFBZ0I7UUFBekQsY0FBUyxHQUFULFNBQVMsQ0FBOEI7SUFFM0QsQ0FBQztJQUNNLGdDQUFXLEdBQWxCO1FBQ0UsTUFBTSxDQUFDLFlBQVksQ0FBQztJQUN0QixDQUFDO0lBQ0gsaUJBQUM7QUFBRCxDQUFDLEFBUEQsSUFPQztBQUVELE9BQU87S0FDSixNQUFNLENBQUMsWUFBWSxFQUFFLEVBQUUsQ0FBQztLQUN4QixPQUFPLENBQUMsS0FBSyxFQUFFLENBQUMsV0FBVyxFQUFFLElBQUksRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDO0FDWG5EO0lBRUUsOEJBQVksTUFBaUI7UUFEdEIsU0FBSSxHQUFZLFFBQVEsQ0FBQTtRQUU3QixNQUFNLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDMUIsQ0FBQztJQUNILDJCQUFDO0FBQUQsQ0FBQyxBQUxELElBS0M7QUFFRCxPQUFPO0lBQ0wsTUFBTSxDQUFDLFlBQVksRUFBRSxFQUFFLENBQUM7SUFDeEIsU0FBUyxDQUFDLFlBQVksRUFBRTtJQUN0QixRQUFRLEVBQUUsMEJBQTBCO0lBQ3BDLFVBQVUsRUFBRSxvQkFBb0I7Q0FDakMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnOyBcblxuY2xhc3MgTXlDb250cm9sbGVyIHtcbiAgY29uc3RydWN0b3IoZm9vOiBGb29TZXJ2aWNlKSB7XG4gICAgY29uc29sZS5sb2coZm9vLmRvU29tZXRoaW5nKCkpO1xuICB9XG59XG5cbnZhciBtID0gYW5ndWxhci5tb2R1bGUoJ215QXBwJywgWyduZ1JvdXRlJywgJ25nUmVzb3VyY2UnLCAndGVzdE1vZHVsZScsICdjb21wb25lbnRzJ10pO1xuXG5tLmNvbnRyb2xsZXIoJ015Q29udHJvbGxlcicsIFsnRm9vJywgTXlDb250cm9sbGVyXSk7IiwiZGVzY3JpYmUoJ215IHRlc3QnLCAoKSA9PiB7XG4gIGl0KCdzb21ldGhpbmcnLCAoKSA9PiB7XG4gICAgZXhwZWN0KHRydWUpLnRvQmUoZmFsc2UpO1xuICB9KVxufSk7IiwiY2xhc3MgQmFyU2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKGZvbzogRm9vU2VydmljZSkge1xuXG4gIH1cblxuICBwdWJsaWMgZG9Tb21ldGhpbmdXaXRoRm9vKCkgOiB2b2lkIHtcblxuICB9XG59XG5cbmFuZ3VsYXJcbiAgLm1vZHVsZSgndGVzdE1vZHVsZScsIFtdKVxuICAuc2VydmljZSgnQmFyJywgWydGb28nLCBCYXJTZXJ2aWNlXSk7XG5cbiIsIid1c2Ugc3RyaWN0JzsgXG5cbmNsYXNzIEZvb1NlcnZpY2Uge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlICRyZXNvdXJjZTogbmcucmVzb3VyY2UuSVJlc291cmNlU2VydmljZSwgJHE6IG5nLklRU2VydmljZSkgeyBcbiAgICBcbiAgfVxuICBwdWJsaWMgZG9Tb21ldGhpbmcoKSA6IFN0cmluZyB7XG4gICAgcmV0dXJuIFwiaW5zaWRlIGZvb1wiO1xuICB9XG59XG5cbmFuZ3VsYXJcbiAgLm1vZHVsZSgndGVzdE1vZHVsZScsIFtdKVxuICAuc2VydmljZSgnRm9vJywgWyckcmVzb3VyY2UnLCAnJHEnLCBGb29TZXJ2aWNlXSk7XG4iLCJcblxuY2xhc3MgSGVsbG9Xb3JsZENvbnRyb2xsZXIge1xuICBwdWJsaWMgbmFtZSA6IFN0cmluZyA9ICdXb3JsZCEnXG4gIGNvbnN0cnVjdG9yKCRzY29wZTogbmcuSVNjb3BlKSB7XG4gICAgJHNjb3BlLm5hbWUgPSB0aGlzLm5hbWU7XG4gIH1cbn1cblxuYW5ndWxhci5cbiAgbW9kdWxlKCdjb21wb25lbnRzJywgW10pLlxuICBjb21wb25lbnQoJ2hlbGxvV29ybGQnLCB7XG4gICAgdGVtcGxhdGU6IGA8aDE+SGVsbG8sIHt7bmFtZX19PC9oMT5gLFxuICAgIGNvbnRyb2xsZXI6IEhlbGxvV29ybGRDb250cm9sbGVyXG4gIH0pOyJdfQ==